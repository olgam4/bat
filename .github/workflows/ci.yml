name: Deno Deploy
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-


      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build
        run: |
          pnpm build

      - name: Install Deno and Deploy
        run: |
          cd dist
          curl -fsSL https://deno.land/x/install/install.sh | sh
          export DENO_INSTALL="/home/runner/.deno"
          export PATH="$DENO_INSTALL/bin:$PATH"
          deno install --allow-read --allow-write --allow-env --allow-net --allow-run --no-check -r -f https://deno.land/x/deploy/deployctl.ts
          deployctl deploy --verbose --prod --project=$PROJECT --token=$TOKEN -- ./server.js
          ls
        env:
          TOKEN: ${{ secrets.DENOLAND }}
          PROJECT: ${{ secrets.PROJECT }}
